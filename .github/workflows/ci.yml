# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  run:
    name: PHP ${{ matrix.php-versions }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        php-versions: ['5.6', '7.0', '7.1', '7.2', '7.3', '7.4', '8.0', '8.1', '8.2', '8.3']
      fail-fast: false
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        ini-values: mysqli.default_socket=/var/run/mysqld/mysqld.sock
        tools: composer:v1
      env:
        COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get composer cache directory
      id: composer-cache
      run: echo "CI_COMPOSER_CACHE_DIR=$(composer config cache-files-dir)" >> $GITHUB_ENV

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: ${{ env.CI_COMPOSER_CACHE_DIR }}
        key: ${{ matrix.php-versions }}-composer-${{ hashFiles('**/composer.json') }}
        restore-keys: ${{ matrix.php-versions }}-composer-
        
    - name: Start MySQL
      run: |
        echo "default_authentication_plugin=mysql_native_password" | sudo tee -a /etc/mysql/mysql.conf.d/mysqld.cnf
        sudo systemctl start mysql.service
      
    - name: Set up database
      run: |
        mysql -e "create database IF NOT EXISTS omeka_test;" -uroot -proot
        mysql -e "alter user root@localhost identified with mysql_native_password by 'root';" -uroot -proot
        mv application/config/config.ini.changeme application/config/config.ini
        mv application/tests/config.ini.changeme application/tests/config.ini
        sed -i 's/db.host = ""/db.host = "localhost"/' application/tests/config.ini
        sed -i 's/db.username = ""/db.username = "root"/' application/tests/config.ini
        sed -i 's/db.dbname = ""/db.dbname = "omeka_test"/' application/tests/config.ini
        sed -i 's/db.password = ""/db.password = "root"/' application/tests/config.ini
        sed -i 's/paths.imagemagick = ""/paths.imagemagick = "\/usr\/bin\/"/' application/tests/config.ini

    - name: Install dependencies
      run: composer install --no-progress
        
    - name: Run tests
      run: ../../vendor/bin/phpunit
      working-directory: ./application/tests
